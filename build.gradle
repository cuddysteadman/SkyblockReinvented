buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
        // search through the 'libs' folder
        flatDir dirs: 'libs'
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT"
        classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
    }
}
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "org.spongepowered.mixin"

version = "0.0.6-pre1"
group = "thecudster.sre"
archivesBaseName = "sre"

sourceCompatibility = targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
    clientJvmArgs += "-Dfml.coreMods.load=thecudster.sre.tweaker.FMLLoadingPlugin"
    clientRunArgs += "--mixin mixins.sre.json"

}

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://repo.spongepowered.org/repository/maven-public/" }
}

configurations {
    packageLib
}


dependencies {
    compile 'org.json:json:20090211'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.29'
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile "com.mod-buildcraft:buildcraft:6.0.8:dev"  // adds buildcraft to the dev env
    //compile "com.googlecode.efficient-java-matrix-library:ejml:0.24" // adds ejml to the dev env

    // the "provided" configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided "com.mod-buildcraft:buildcraft:6.0.8:dev"

    // the deobf configurations:  "deobfCompile" and "deobfProvided" are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile "com.mod-buildcraft:buildcraft:6.0.8:dev"
    //deobfProvided "com.mod-buildcraft:buildcraft:6.0.8:dev"

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    packageLib("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }
    packageLib(files("libs/DiscordIPC-0.4.jar"))
    packageLib(files("libs/json-20210307.jar"))

    provided files("libs/modcore.jar")
    configurations.compile.extendsFrom(configurations.packageLib)
}

mixin {
    add sourceSets.main, "mixins.sre.refmap.json"
}
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest.attributes(
            "FMLCorePlugin": "thecudster.sre.tweaker.FMLLoadingPlugin",
            "FMLCorePluginContainsFMLMod": true,
            "ForceLoadAsMod": true,
            "Main-Class": "SkyblockReinventedInstallerFrame",
            "MixinConfigs": "mixins.sre.json",
            "ModSide": "CLIENT",
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": "0",
    )
    from {
        configurations.packageLib.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
sourceSets {
    main { output.resourcesDir = output.resourcesDir }
}