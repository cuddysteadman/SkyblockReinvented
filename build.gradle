/*
 * Modified from Skytils under GNU Affero Public license.
 * https://github.com/Skytils/SkytilsMod/blob/main/LICENSE
 * @author My-Name-Is-Jeff
 * @author Sychic
 */
allprojects {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
}
buildscript {
    repositories {
        jcenter()
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots"
        }
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
        // search through the 'libs' folder
        flatDir dirs: 'libs'
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath "com.github.asbyth:ForgeGradle:86b23926f3"
        classpath "com.github.Skytils:mixingradle:d75e32e743"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "org.spongepowered.mixin"
apply plugin: "java"
version = "0.0.6"
group = "thecudster.sre"
archivesBaseName = "sre"

sourceCompatibility = targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
    clientJvmArgs += "-Dfml.coreMods.load=thecudster.sre.tweaker.FMLLoadingPlugin"
    clientRunArgs += "--mixin mixins.sre.json"

}

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://repo.spongepowered.org/repository/maven-public/" }
}

configurations {
    packageLib
}


dependencies {
    implementation('org.json:json:20090211') {
        transitive = false
    }
    implementation (group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.29') {
        transitive = false
    }
    packageLib('com.github.stleary:JSON-java:fa46da4') {
        transitive = false
    }
    packageLib('com.github.jagrosh:DiscordIPC:e29d6d8') {
        exclude module: 'log4j'
    }
    implementation("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        transitive = false
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }
    packageLib("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }
    annotationProcessor("org.spongepowered:mixin:0.7.11-SNAPSHOT")

    provided files("libs/modcore.jar")
}

mixin {
    disableRefMapWarning = true
    defaultObfuscationEnv searge
    add sourceSets.main, "mixins.sre.refmap.json"
}
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest.attributes(
            "FMLCorePlugin": "thecudster.sre.tweaker.FMLLoadingPlugin",
            "FMLCorePluginContainsFMLMod": true,
            "ForceLoadAsMod": true,
            "Main-Class": "SkyblockReinventedInstallerFrame",
            "MixinConfigs": "mixins.sre.json",
            "ModSide": "CLIENT",
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": "0",
    )
    from {
        configurations.packageLib.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
sourceSets {
    main { output.resourcesDir = output.resourcesDir }
}